name: Deploy Laravel to VPS

on:
  pull_request:
    branches:
      - prod
  push:
    branches:
      - prod

env:
  LARAVEL_ENV: production
  APP_NAME: "emailing app"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: mbstring, pdo, pdo_mysql, xml, ctype, json, tokenizer, gd
          coverage: none

      - name: Copy environment file
        run: cp .env.example .env

      - name: Install dependencies
        run: composer install --no-dev --prefer-dist --optimize-autoloader

      - name: Generate application key
        run: php artisan key:generate --show

      - name: Build assets (if using Vite)
        run: |
          npm ci --silent
          npm run build --silent

      - name: Create deployment archive
        run: |
          mkdir -p deployment
          rsync -av --delete \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='node_modules' \
            --exclude='storage/*' \
            --exclude='tests' \
            --exclude='.env' \
            --exclude='deployment' \
            ./ deployment/

          tar -czf deployment.tar.gz deployment/

      - name: Déterminer la méthode d'authentification
        id: auth-method
        run: |
          if [ -n "${{ secrets.VPS_PASSWORD }}" ]; then
            echo "METHOD=password" >> $GITHUB_OUTPUT
          else
            echo "METHOD=key" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to VPS avec SCP
        if: steps.auth-method.outputs.METHOD == 'key'
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: "deployment.tar.gz"
          target: "/tmp/"

      - name: Deploy to VPS avec mot de passe
        if: steps.auth-method.outputs.METHOD == 'password'
        run: |
          sshpass -p "${{ secrets.VPS_PASSWORD }}" scp \
            -o StrictHostKeyChecking=no \
            -P ${{ secrets.VPS_PORT }} \
            deployment.tar.gz \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/tmp/

      - name: Execute deployment script on server (Clé SSH)
        if: steps.auth-method.outputs.METHOD == 'key'
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            $(curl -s https://raw.githubusercontent.com/your-username/your-repo/main/remote-deploy.sh)

      - name: Execute deployment script on server (Mot de passe)
        if: steps.auth-method.outputs.METHOD == 'password'
        run: |
          sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh \
            -o StrictHostKeyChecking=no \
            -p ${{ secrets.VPS_PORT }} \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
            'bash -s' < remote-deploy.sh

      - name: Cleanup
        run: rm -rf deployment deployment.tar.gz
